# -*- eval: (visual-line-mode -1); -*-
#+author: rennsax
#+startup: show2levels

#+html: <div align="center"><h1>Celeste Emacs</h1>
#+html: <img src="https://static.miraheze.org/celestewiki/a/ac/Strawberry_flap.gif"alt="celeste strawberry"/>
#+html: <p>Simple, lightweight and bespoked Emacs configurations.</p>
#+html: <p>
#+html: <img src="https://img.shields.io/badge/GNU_Emacs-30.1-blue" alt="GNU Emacs 30.1" />
#+html: <img alt="GitHub License" src="https://img.shields.io/github/license/rennsax/.emacs.d">
#+html: <img alt="macOS" src="https://img.shields.io/badge/macOS-lightgrey?logo=apple&logoColor=fff">
#+html: <img alt="GNU/Linux" src="https://img.shields.io/badge/GNU%2FLinux-fcc624?logo=linux&logoColor=000">
#+html: </p>
#+html: </div>

--------------

** Installation

*** Emacs

You can get the source code for Emacs [[http://ftpmirror.gnu.org/emacs][here]]. Either use ~curl -sSLO~ or ~wget~.

**** macOS

Directly installed from Homebrew's default formulae is OK, but you may get an
Emacs without some essential new features, such as native compilation. I
recommend installing a third-party distributed Emacs bundles such as
[[https://github.com/d12frosted/homebrew-emacs-plus.git][d12frosted/homebrew-emacs-plus]].

#+begin_src shell
brew install emacs-plus@30 --with-imagemagick
#+end_src

You can also pick your favorite icon [[https://github.com/d12frosted/homebrew-emacs-plus#icons][here]].

**** NixOS

[[https://search.nixos.org/packages?channel=unstable&query=emacs][Emacs is available on Nixpkgs.]]

*** Hard Dependencies

Hard dependencies are external tools that are required by some Emacs packages.
To use these packages, you need first install the corresponding tools with your
favorite package manager on your platform (such as ~homebrew~ on macOS, ~apt~ on
Ubuntu).

Hard dependencies are listed here. An asterisk symbol indicates that the tool is
optional for the package(s).

| Tool              | Used by           | Description                                 |
|-------------------+-------------------+---------------------------------------------|
| [[https://github.com/andreafrancia/trash-cli][trash-cli]]         | trash             | Linux. Buggy on macOS.                      |
| [[https://github.com/sindresorhus/macos-trash][macos-trash]]       | trash             | macOS.                                      |
| [[https://man-db.nongnu.org/][man-db]]            | man               | macOS. Most GNU/Linux distros have builtin. |
| [[https://github.com/BurntSushi/ripgrep][ripgrep]]           | consult, deadgrep | Another Rust winner!                        |
| [[https://github.com/sharkdp/fd][fd]]                | consult           | ~find(1)~'s alternative.                    |
| [[https://pandoc.org/][pandoc]]            | org-pandoc-import | Required.                                   |
| [[https://github.com/jcsalterego/pngpaste][pngpaste]]          | org-download      | macOS.                                      |
| [[https://www.gimp.org/][gimp]]*             | org-download      | Used by ~org-download-edit~.                |
| [[https://github.com/AbiWord/enchant][libenchant]]        | jinx              | Spell checker.                              |
| [[https://www.leonerd.org.uk/code/libvterm/][libvterm]]          | vterm             | Terminal emulator in Emacs.                 |
| [[https://www.libreoffice.org/discover/libreoffice/][LibreOffice]]*      | doc-view[fn:1]    | For previewing documents.                   |
| [[https://gitlab.com/matsievskiysv/math-preview][math-preview]]      | math-preview      | Preview math formulas inline.               |
| [[https://www.ghostscript.com/][ghostscript]]       | doc-view          | PDF -> PNG                                  |
| [[https://github.com/blahgeek/emacs-lsp-booster][emacs-lsp-booster]] | emacs-lsp-booster | Wrapper executable for LSP client.          |
| [[https://prettier.io/][prettier]]*         | format-all        | Formatter for many languages.               |

[fn:1] For more dependencies of doc-view package, use ~M-x find-library doc-view~.

Check my personal dotfiles to see how I install external dependencies for Emacs:
[[https://github.com/rennsax/dotfiles/blob/main/modules/emacs/emacs-deps.nix][rennsax/dotfiles:modules/emacs/emacs-deps.nix]].

*** tree-sitter

I download precompiled tree-sitter language grammars. Example commands:

#+begin_src shell
VERSION=0.12.264
PLATFORM=macos
FILE=tree-sitter-grammars-${PLATFORM}-${VERSION}.tar.gz
wget https://github.com/emacs-tree-sitter/tree-sitter-langs/releases/download/${VERSION}/${FILE}
mkdir -p tree-sitter
tar xvf ${FILE} -C tree-sitter
#+end_src

You need to rename ~<LANGUAGE>.<SUFFIX>~ to ~libtree-sitter-<LANGUAGE>.<SUFFIX>~
then. It's recommended to use the ~wdired~ package in Emacs to do this stuff
(hint: ~C-x C-q~ in the dired buffer).

*** Fonts

Here lists the fonts that I personally use.

- [[https://monaspace.githubnext.com/][Monaspice]]: An innovative superfamily of fonts for code.
- [[https://github.com/tonsky/FiraCode][FiraCode]]: Free monospaced font with programming ligatures.
- [[https://github.com/laishulu/Sarasa-Term-SC-Nerd][更纱黑体]]: 极少数中英文宽度严格 2:1 的字体，适用于解决 org-table 对齐问题。

** Misc.

*** Map CapsLock to Ctrl

It's known that Emacs users (who respect vanilla key bindings) usually suffer
from [[https://en.wikipedia.org/wiki/Repetitive_strain_injury][RIP]] after enjoying their Emacs journey for many years. The core leader of
FSF, Richard Stallman, almost lost his ability to type because of RIP. See [[http://xahlee.info/emacs/emacs/emacs_hand_pain_celebrity.html][this
interesting post]]. For those who rely on their typing skills to make a living,
it's rather important to take care of the finger health.

There are many suggestions for protecting your fingers from RIP. The most
famous, or simplest suggestion, is *to map CapsLock key to Ctrl*. Emacs key
bindings heavily reply on the Ctrl key, but the key is so far from our fingers
while typing.

On macOS, we can easily set this: System Settings > Keyboard > Keyboard
Shortcuts > Modifier Keys. You can also use the powerful [[https://github.com/pqrs-org/Karabiner-Elements][Karabiner-Elements]] to
configure your keyboard completely, which is my choice.

On Windows, you may find a lot of people teaching you to modify the Registry.
It's too complicated for me, though. I prefer to use [[https://learn.microsoft.com/en-us/windows/powertoys/][Microsoft PowerToys]] to
customize the keyboard.

On Linux, the routines vary from distros.
- Ubuntu: Gnome Tweaks (~gnome-tweaks~ from the cmd) -> Additional Layout
  Options -> Ctrl position -> Caps Lock as Ctrl.

** Copyright Notice

The banner under the project name is a work from Celeste game asset, borrowed
from [[https://github.com/laishulu/emacs-smart-input-source][Celeste Wiki]], and licensed under [[https://creativecommons.org/licenses/by-nc-sa/4.0/deed.en][CC BY-NC-SA 4.0 License]]. You may not use
the material for commercial purposes.

I use this banner just because I'm a huge fan of Celeste game. If my actions
infringe on any copyrights, please contact me and I will remove it. Thank a lot.
